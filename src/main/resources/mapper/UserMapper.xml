<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.UserMapper">
  <resultMap id="BaseResultMap" type="User">
    <id column="id" jdbcType="SMALLINT" property="id" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="loginname" jdbcType="VARCHAR" property="loginname" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="encrypt" jdbcType="VARCHAR" property="encrypt" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="age" jdbcType="TINYINT" property="age" />
    <result column="usertype" jdbcType="TINYINT" property="usertype" />
    <result column="isdefault" jdbcType="TINYINT" property="isdefault" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="createdatetime" jdbcType="TIMESTAMP" property="createdatetime" />
    <result column="server_id" jdbcType="BIGINT" property="serverId" />
    <result column="server_id_h5" jdbcType="BIGINT" property="serverIdH5" />
    <result column="alipay_server_id" jdbcType="BIGINT" property="alipayServerId" />
    <result column="client_fans_id" jdbcType="VARCHAR" property="clientFansId" />
    <result column="user_fans_id" jdbcType="BIGINT" property="userFansId" />
    <result column="is_binding" jdbcType="INTEGER" property="isBinding" />
    <result column="amount" jdbcType="BIGINT" property="amount" />
    <result column="withdrawal_amount" jdbcType="BIGINT" property="withdrawalAmount" />
    <result column="is_content_user" jdbcType="INTEGER" property="isContentUser" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="agent_id" jdbcType="INTEGER" property="agentId" />
    <result column="is_agent_admin" jdbcType="INTEGER" property="isAgentAdmin" />
    <result column="bank_id" jdbcType="INTEGER" property="bankId" />
    <result column="bank_num" jdbcType="VARCHAR" property="bankNum" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, parent_id, loginname, `name`, `password`, encrypt, sex, age, usertype, isdefault, 
    `state`, createdatetime, server_id, server_id_h5, alipay_server_id, client_fans_id, 
    user_fans_id, is_binding, amount, withdrawal_amount, is_content_user, is_delete, 
    agent_id, is_agent_admin, bank_id, bank_num, mobile, email
  </sql>
  <select id="selectByExample" parameterType="UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Short" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short">
    delete from t_user
    where id = #{id,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="UserExample">
    delete from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="User" useGeneratedKeys="true">
    insert into t_user (parent_id, loginname, `name`, 
      `password`, encrypt, sex, 
      age, usertype, isdefault, 
      `state`, createdatetime, server_id, 
      server_id_h5, alipay_server_id, client_fans_id, 
      user_fans_id, is_binding, amount, 
      withdrawal_amount, is_content_user, is_delete, 
      agent_id, is_agent_admin, bank_id, 
      bank_num, mobile, email
      )
    values (#{parentId,jdbcType=INTEGER}, #{loginname,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{encrypt,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, 
      #{age,jdbcType=TINYINT}, #{usertype,jdbcType=TINYINT}, #{isdefault,jdbcType=TINYINT}, 
      #{state,jdbcType=TINYINT}, #{createdatetime,jdbcType=TIMESTAMP}, #{serverId,jdbcType=BIGINT}, 
      #{serverIdH5,jdbcType=BIGINT}, #{alipayServerId,jdbcType=BIGINT}, #{clientFansId,jdbcType=VARCHAR}, 
      #{userFansId,jdbcType=BIGINT}, #{isBinding,jdbcType=INTEGER}, #{amount,jdbcType=BIGINT}, 
      #{withdrawalAmount,jdbcType=BIGINT}, #{isContentUser,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}, 
      #{agentId,jdbcType=INTEGER}, #{isAgentAdmin,jdbcType=INTEGER}, #{bankId,jdbcType=INTEGER}, 
      #{bankNum,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="User" useGeneratedKeys="true">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="loginname != null">
        loginname,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="encrypt != null">
        encrypt,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="usertype != null">
        usertype,
      </if>
      <if test="isdefault != null">
        isdefault,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="createdatetime != null">
        createdatetime,
      </if>
      <if test="serverId != null">
        server_id,
      </if>
      <if test="serverIdH5 != null">
        server_id_h5,
      </if>
      <if test="alipayServerId != null">
        alipay_server_id,
      </if>
      <if test="clientFansId != null">
        client_fans_id,
      </if>
      <if test="userFansId != null">
        user_fans_id,
      </if>
      <if test="isBinding != null">
        is_binding,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="withdrawalAmount != null">
        withdrawal_amount,
      </if>
      <if test="isContentUser != null">
        is_content_user,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="agentId != null">
        agent_id,
      </if>
      <if test="isAgentAdmin != null">
        is_agent_admin,
      </if>
      <if test="bankId != null">
        bank_id,
      </if>
      <if test="bankNum != null">
        bank_num,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="loginname != null">
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="encrypt != null">
        #{encrypt,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="age != null">
        #{age,jdbcType=TINYINT},
      </if>
      <if test="usertype != null">
        #{usertype,jdbcType=TINYINT},
      </if>
      <if test="isdefault != null">
        #{isdefault,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="createdatetime != null">
        #{createdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="serverId != null">
        #{serverId,jdbcType=BIGINT},
      </if>
      <if test="serverIdH5 != null">
        #{serverIdH5,jdbcType=BIGINT},
      </if>
      <if test="alipayServerId != null">
        #{alipayServerId,jdbcType=BIGINT},
      </if>
      <if test="clientFansId != null">
        #{clientFansId,jdbcType=VARCHAR},
      </if>
      <if test="userFansId != null">
        #{userFansId,jdbcType=BIGINT},
      </if>
      <if test="isBinding != null">
        #{isBinding,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="withdrawalAmount != null">
        #{withdrawalAmount,jdbcType=BIGINT},
      </if>
      <if test="isContentUser != null">
        #{isContentUser,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=INTEGER},
      </if>
      <if test="isAgentAdmin != null">
        #{isAgentAdmin,jdbcType=INTEGER},
      </if>
      <if test="bankId != null">
        #{bankId,jdbcType=INTEGER},
      </if>
      <if test="bankNum != null">
        #{bankNum,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="UserExample" resultType="java.lang.Long">
    select count(*) from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=SMALLINT},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.loginname != null">
        loginname = #{record.loginname,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.encrypt != null">
        encrypt = #{record.encrypt,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=TINYINT},
      </if>
      <if test="record.usertype != null">
        usertype = #{record.usertype,jdbcType=TINYINT},
      </if>
      <if test="record.isdefault != null">
        isdefault = #{record.isdefault,jdbcType=TINYINT},
      </if>
      <if test="record.state != null">
        `state` = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.createdatetime != null">
        createdatetime = #{record.createdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.serverId != null">
        server_id = #{record.serverId,jdbcType=BIGINT},
      </if>
      <if test="record.serverIdH5 != null">
        server_id_h5 = #{record.serverIdH5,jdbcType=BIGINT},
      </if>
      <if test="record.alipayServerId != null">
        alipay_server_id = #{record.alipayServerId,jdbcType=BIGINT},
      </if>
      <if test="record.clientFansId != null">
        client_fans_id = #{record.clientFansId,jdbcType=VARCHAR},
      </if>
      <if test="record.userFansId != null">
        user_fans_id = #{record.userFansId,jdbcType=BIGINT},
      </if>
      <if test="record.isBinding != null">
        is_binding = #{record.isBinding,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=BIGINT},
      </if>
      <if test="record.withdrawalAmount != null">
        withdrawal_amount = #{record.withdrawalAmount,jdbcType=BIGINT},
      </if>
      <if test="record.isContentUser != null">
        is_content_user = #{record.isContentUser,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.agentId != null">
        agent_id = #{record.agentId,jdbcType=INTEGER},
      </if>
      <if test="record.isAgentAdmin != null">
        is_agent_admin = #{record.isAgentAdmin,jdbcType=INTEGER},
      </if>
      <if test="record.bankId != null">
        bank_id = #{record.bankId,jdbcType=INTEGER},
      </if>
      <if test="record.bankNum != null">
        bank_num = #{record.bankNum,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_user
    set id = #{record.id,jdbcType=SMALLINT},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      loginname = #{record.loginname,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      `password` = #{record.password,jdbcType=VARCHAR},
      encrypt = #{record.encrypt,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=TINYINT},
      age = #{record.age,jdbcType=TINYINT},
      usertype = #{record.usertype,jdbcType=TINYINT},
      isdefault = #{record.isdefault,jdbcType=TINYINT},
      `state` = #{record.state,jdbcType=TINYINT},
      createdatetime = #{record.createdatetime,jdbcType=TIMESTAMP},
      server_id = #{record.serverId,jdbcType=BIGINT},
      server_id_h5 = #{record.serverIdH5,jdbcType=BIGINT},
      alipay_server_id = #{record.alipayServerId,jdbcType=BIGINT},
      client_fans_id = #{record.clientFansId,jdbcType=VARCHAR},
      user_fans_id = #{record.userFansId,jdbcType=BIGINT},
      is_binding = #{record.isBinding,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=BIGINT},
      withdrawal_amount = #{record.withdrawalAmount,jdbcType=BIGINT},
      is_content_user = #{record.isContentUser,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      agent_id = #{record.agentId,jdbcType=INTEGER},
      is_agent_admin = #{record.isAgentAdmin,jdbcType=INTEGER},
      bank_id = #{record.bankId,jdbcType=INTEGER},
      bank_num = #{record.bankNum,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="User">
    update t_user
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="loginname != null">
        loginname = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="encrypt != null">
        encrypt = #{encrypt,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=TINYINT},
      </if>
      <if test="usertype != null">
        usertype = #{usertype,jdbcType=TINYINT},
      </if>
      <if test="isdefault != null">
        isdefault = #{isdefault,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=TINYINT},
      </if>
      <if test="createdatetime != null">
        createdatetime = #{createdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="serverId != null">
        server_id = #{serverId,jdbcType=BIGINT},
      </if>
      <if test="serverIdH5 != null">
        server_id_h5 = #{serverIdH5,jdbcType=BIGINT},
      </if>
      <if test="alipayServerId != null">
        alipay_server_id = #{alipayServerId,jdbcType=BIGINT},
      </if>
      <if test="clientFansId != null">
        client_fans_id = #{clientFansId,jdbcType=VARCHAR},
      </if>
      <if test="userFansId != null">
        user_fans_id = #{userFansId,jdbcType=BIGINT},
      </if>
      <if test="isBinding != null">
        is_binding = #{isBinding,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=BIGINT},
      </if>
      <if test="withdrawalAmount != null">
        withdrawal_amount = #{withdrawalAmount,jdbcType=BIGINT},
      </if>
      <if test="isContentUser != null">
        is_content_user = #{isContentUser,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="agentId != null">
        agent_id = #{agentId,jdbcType=INTEGER},
      </if>
      <if test="isAgentAdmin != null">
        is_agent_admin = #{isAgentAdmin,jdbcType=INTEGER},
      </if>
      <if test="bankId != null">
        bank_id = #{bankId,jdbcType=INTEGER},
      </if>
      <if test="bankNum != null">
        bank_num = #{bankNum,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="User">
    update t_user
    set parent_id = #{parentId,jdbcType=INTEGER},
      loginname = #{loginname,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      encrypt = #{encrypt,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      age = #{age,jdbcType=TINYINT},
      usertype = #{usertype,jdbcType=TINYINT},
      isdefault = #{isdefault,jdbcType=TINYINT},
      `state` = #{state,jdbcType=TINYINT},
      createdatetime = #{createdatetime,jdbcType=TIMESTAMP},
      server_id = #{serverId,jdbcType=BIGINT},
      server_id_h5 = #{serverIdH5,jdbcType=BIGINT},
      alipay_server_id = #{alipayServerId,jdbcType=BIGINT},
      client_fans_id = #{clientFansId,jdbcType=VARCHAR},
      user_fans_id = #{userFansId,jdbcType=BIGINT},
      is_binding = #{isBinding,jdbcType=INTEGER},
      amount = #{amount,jdbcType=BIGINT},
      withdrawal_amount = #{withdrawalAmount,jdbcType=BIGINT},
      is_content_user = #{isContentUser,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      agent_id = #{agentId,jdbcType=INTEGER},
      is_agent_admin = #{isAgentAdmin,jdbcType=INTEGER},
      bank_id = #{bankId,jdbcType=INTEGER},
      bank_num = #{bankNum,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=SMALLINT}
  </update>
</mapper>